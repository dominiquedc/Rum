<?php

namespace Rum\Component\State;

use Rum\Component\State\State;
use Rum\Component\FileSystem\FileSystem;
use Rum\Component\State\Exception\RumRepositoryNotClonedException;

class Git extends State {

  const IGNORE_FILE = '.gitignore';

  public function fetch($repository, $working_directory) {
    if (!drush_shell_exec("git clone $repository $working_directory")) {
      throw new RumRepositoryNotClonedException($repository, $working_directory);
    }

    $create_ignore = drush_confirm(dt('Do you want to create an ignore file?'));
    if ($create_ignore) {
      $this->createIgnoreFile($working_directory);
    }
  }

  public function getIgnoreFile() {
    return self::IGNORE_FILE;
  }

  public function createIgnoreFile($working_directory) {
    $file_system = new FileSystem();
    $ignore_file = $working_directory . '/' . self::IGNORE_FILE;
    if (!$file_system->checkFile($ignore_file)) {
      $contents = <<<IGNORE
      # Ignore these files from the Git repository
      # Content taken from https://github.com/github/gitignore
      # You may adapt these to your needs
      #
      # Generated by Rum https://github.com/netsensei/Rum
      #
      sites/default/files
      sites/default/private
      sites/default/settings.php
      cache/
      files/
      /README.txt
      /CHANGELOG.txt
      /COPYRIGHT.txt
      /INSTALL*.txt
      /LICENSE.txt
      /MAINTAINERS.txt
      /UPGRADE.txt
      robots.txt
      sites/all/README.txt
      sites/all/modules/README.txt
      sites/all/themes/README.txt
      .htaccess
IGNORE;

      $file_system->createFile($ignore_file, $contents);
    }
  }

}